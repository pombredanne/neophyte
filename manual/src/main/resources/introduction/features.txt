[[tutorial-features]]
What is Neo4j?
==============

Neo4j is a graph database, storing data in the nodes and relationships of a graph. 
The most generic of data structures, a graph elegantly represents any kind of data, preserving the natural structure of the domain. 

Neo4j features:

* an intuitive graph-oriented model for data representation. Instead of static and rigid tables, rows and columns, you work with a flexible graph network consisting of nodes, relationships and properties.
* a disk-based, native storage manager completely optimized for storing graph structures for maximum performance and scalability.
* massive scalability. Neo4j can handle graphs of several billion nodes/relationships/properties on a single machine and can be sharded to scale out across multiple machines.
* a powerful traversal framework for high-speed traversals in the node space.
* can be deployed as a full server or a very slim database with a small footprint (\~750k jar).
* a simple and convenient object-oriented API.

Of course, Neo4j includes the usual database features: ACID transactions, durable persistence, concurrency control, transaction recovery, high availability and everything else you’d expect from an enterprise-strength database.


